{"version":3,"sources":["head.js","out.js","App.js","serviceWorker.js","index.js"],"names":["Head","react_default","a","createElement","className","Out","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","plate","bind","assertThisInitialized","toConsumableArray","data","out","isNaN","Number","push","shift","reverse","concat","join","width","src","window","location","origin","image_path","lib_default","size","spinnerColor","spinnerWidth","visible","Component","App","state","pictures","files","uploading","search","searching","onDrop","next","back","processImage","picture","setState","urls","forEach","pic","url","URL","createObjectURL","document","getElementById","innerText","image","_this2","formData","FormData","set","config","headers","content-type","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","console","log","Axios","post","then","res","e","_this3","length","currentTarget","_this4","value","found","i","_this5","compiled_default","withIcon","buttonText","onChange","imgExtension","maxFileSize","map","file","key","alttext","id","onClick","type","placeholder","_","out_Out","Boolean","hostname","match","ReactDOM","render","head","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wNAUeA,MARf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0EAAd,uGCFaC,cACjB,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQP,EAAKO,MAAMC,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IAFGA,uEAQhB,IAFA,IAAIO,EAAKN,OAAAS,EAAA,EAAAT,CAAOE,KAAKJ,MAAMY,KAAKJ,OAC5BK,EAAM,IACFC,MAAMC,OAAOP,EAAM,MACvBK,EAAIG,KAAKR,EAAM,IACfA,EAAMS,QAIV,OAFAT,EAAQA,EAAMU,WACdL,EAAMA,EAAIM,OAAOX,IACNY,KAAK,sCAIhB,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAEPM,KAAKJ,MAAMY,KAAKjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAC/BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUM,KAAKI,SAC9Bb,EAAAC,EAAAC,cAAA,OAAKwB,MAAM,OAAOC,IAAKC,OAAOC,SAASC,OAAO,IAAIrB,KAAKJ,MAAMY,KAAKc,cAEjE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAASgC,KAAM,IAAKC,aAAc,KAAMC,aAAc,EAAGC,SAAS,aA1B3EC,8BCEZC,cACjB,SAAAA,EAAYjC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,IACfhC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAA1B,KAAAH,KAAMJ,KACDkC,MAAQ,CACTC,SAAU,GACVC,MAAM,GACNC,WAAU,EACVxB,IAAI,GACJyB,OAAO,KACPC,WAAU,GAEdtC,EAAKuC,OAASvC,EAAKuC,OAAO/B,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IACdA,EAAKwC,KAAOxC,EAAKwC,KAAKhC,KAAVP,OAAAQ,EAAA,EAAAR,CAAAD,IACZA,EAAKyC,KAAOzC,EAAKyC,KAAKjC,KAAVP,OAAAQ,EAAA,EAAAR,CAAAD,IACZA,EAAK0C,aAAe1C,EAAK0C,aAAalC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKqC,OAASrC,EAAKqC,OAAO7B,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IAdCA,sEAiBZ2C,GACHxC,KAAKyC,SAAS,CACVV,SAAU/B,KAAK8B,MAAMC,SAAShB,OAAOyB,IACvC,WACE,IAAIE,EAAO,GACX1C,KAAK8B,MAAMC,SAASY,QAAQ,SAAAC,GACxB,IAAIC,EAAMC,IAAIC,gBAAgBH,GAC9BF,EAAK9B,KAAKiC,KAEd7C,KAAKyC,SAAS,CACVT,MAAOhC,KAAK8B,MAAME,MAAMjB,OAAO2B,OAKvCM,SAASC,eAAe,eAAeC,UAAY,gDAE1CC,GAAM,IAAAC,EAAApD,KACXqD,EAAW,IAAIC,SACnBD,EAASE,IAAI,YAAaJ,GAC1B,IAAIK,EAAS,CACTC,QAAQ,CACJC,eAAgB,uEAEpBC,iBAAkB,SAAUC,GACxB,IAAIC,EAAmBC,KAAKC,MAA+B,IAAvBH,EAAcI,OAAgBJ,EAAcK,OAChFC,QAAQC,IAAIN,KAGpBO,IAAMC,KAAKlD,OAAOC,SAASC,OAAO,UAAUgC,EAASG,GACpDc,KAAK,SAAAC,GACF,IAAI/D,EAAO+D,EAAI/D,KACf4C,EAAKtB,MAAMrB,IAAIG,KAAKJ,GACpB4C,EAAKX,SAAS,CAAChC,IAAI2C,EAAKtB,MAAMrB,qCAIjC+D,GAAE,IAAAC,EAAAzE,KAC4B,GAA5BA,KAAK8B,MAAMC,SAAS2C,OAEnBF,EAAEG,cAAczB,UAAY,8BAG5BlD,KAAKyC,SAAS,CAACR,WAAU,IACzBjC,KAAK8B,MAAMC,SAASY,QAAS,SAAAQ,GACzBsB,EAAKlC,aAAaY,qCAK1BnD,KAAKyC,SAAS,CAACR,WAAU,EAAKF,SAAS,GAAGC,MAAM,GAAGvB,IAAI,oCAEpD+D,GAAE,IAAAI,EAAA5E,KACqB,IAAvBwE,EAAEG,cAAcE,MACf7E,KAAKyC,SAAS,CAACN,WAAU,IAGzBnC,KAAKyC,SAAS,CAACN,WAAU,IAE7B,IAAI2C,GAAQ,EACZ9E,KAAK8B,MAAMrB,IAAIkC,QAAQ,SAACnC,EAAKuE,GACtBvE,EAAKJ,MAAMY,KAAK,MAAMwD,EAAEG,cAAcE,QAErCD,EAAKnC,SAAS,CAACP,OAAO6C,IACtBD,GAAQ,KAGXA,GACD9E,KAAKyC,SAAS,CAACP,OAAO,wCAIrB,IAAA8C,EAAAhF,KACL,OACIT,EAAAC,EAAAC,cAAA,WACCO,KAAK8B,MAAMG,UACZ1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACfH,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAaE,UAAU,QAAQwF,UAAU,EACjCC,WAAW,gBACXC,SAAUpF,KAAKoC,OACfiD,aAAc,CAAC,OAAQ,OAAQ,OAAQ,QACvCC,YAAa,UACgB,GAA5BtF,KAAK8B,MAAMC,SAAS2C,OAAU,GAAGnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAChDM,KAAK8B,MAAME,MAAMuD,IACd,SAACC,EAAKT,GACF,OAAQxF,EAAAC,EAAAC,cAAA,OAAKgG,IAAKV,EAAGrF,UAAU,aAC/BH,EAAAC,EAAAC,cAAA,OAAKiG,QAAQ,GAAGzE,MAAM,OAAOC,IAAKsE,SAMlDjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQkG,GAAG,cAAcC,QAAS5F,KAAKqC,KAAM3C,UAAU,mBAAvD,cAEGH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,2EACAH,EAAAC,EAAAC,cAAA,SAAO2F,SAAUpF,KAAKkC,OAAQ2D,KAAK,SAASnG,UAAU,iCAAiCoG,YAAY,oBAE/F9F,KAAK8B,MAAMC,SAASwD,IAAI,SAACQ,EAAEhB,GACvB,IAAIC,EAAKlD,MAAMK,WAAW6C,EAAKlD,MAAMI,QAAQ6C,EAC7C,OACAxF,EAAAC,EAAAC,cAACuG,EAAD,CAAKP,IAAKV,EAAGvE,KAAMwE,EAAKlD,MAAMrB,IAAIsE,OAG1CxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkG,QAAS5F,KAAKsC,MAAlD,uBA7HRV,aCObqE,QACW,cAA7B9E,OAAOC,SAAS8E,UAEe,UAA7B/E,OAAOC,SAAS8E,UAEhB/E,OAAOC,SAAS8E,SAASC,MACvB,2DCXNC,IAASC,OAAO9G,EAAAC,EAAAC,cAAC6G,EAAD,MAAUtD,SAASC,eAAe,SAC/CD,SAASC,eAAe,SAC3BmD,IAASC,OAAO9G,EAAAC,EAAAC,cAAC8G,EAAD,MAASvD,SAASC,eAAe,SDwH3C,kBAAmBuD,WACrBA,UAAUC,cAAcC,MAAMpC,KAAK,SAAAqC,GACjCA,EAAaC","file":"static/js/main.dcecdad1.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Head() {\n  return (\n    <div className=\"d-flex justify-content-center py-4 bg-primary\">\n        <h1 className=\"text-center border rounded border-success p-3 bg-white text-success h1\">IFind</h1>\n    </div>\n  );\n}\n\nexport default Head;\n","import React, { Component } from 'react';\nimport Spinner from 'react-spinner-material';\n\nexport default class Out extends Component {\n    constructor (props) {\n        super(props)\n        this.plate = this.plate.bind(this)\n    }\n\n    plate(){\n        var plate = [...this.props.data.plate];\n        var out = [];\n        while (!isNaN(Number(plate[0]))) {\n            out.push(plate[0]);\n            plate.shift();\n        }\n        plate = plate.reverse();\n        out = out.concat(plate);\n        return out.join(' ');\n    }\n\n    render () {\n        return (\n            <div className=\"d-flex col-4 p-3\">\n                {\n                    this.props.data?<div className=\"col-12\">\n                    <div className=\"h1 p-4\">{this.plate()}</div>\n                    <img width=\"100%\" src={window.location.origin+\"/\"+this.props.data.image_path}/>\n                    </div>\n                    :<div className=\"p-5\"><Spinner size={120} spinnerColor={\"#0\"} spinnerWidth={3} visible={true}/></div>\n                }\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport './App.css'\nimport ImageUpload from 'react-images-upload';\nimport Out from './out.js';\nimport Axios from 'axios';\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            pictures: [],\n            files:[],\n            uploading:true,\n            out:[],\n            search:null,\n            searching:false\n        };\n        this.onDrop = this.onDrop.bind(this);\n        this.next = this.next.bind(this);\n        this.back = this.back.bind(this);\n        this.processImage = this.processImage.bind(this)\n        this.search = this.search.bind(this)\n    }\n\n    onDrop(picture) {\n        this.setState({\n            pictures: this.state.pictures.concat(picture),\n        },function(){\n            let urls = []\n            this.state.pictures.forEach(pic => {\n                let url = URL.createObjectURL(pic);\n                urls.push(url);\n            });\n            this.setState({\n                files: this.state.files.concat(urls)\n            });\n        });\n        \n        \n        document.getElementById('next_button').innerText = 'Continue';\n    }\n    processImage(image){\n        var formData = new FormData();\n        formData.set('car_image', image);\n        var config = {\n            headers:{\n                'content-type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n            },\n            onUploadProgress: function( progressEvent ) {\n                var percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total )\n                console.log(percentCompleted)\n            }\n        }\n        Axios.post(window.location.origin+\"/upload\",formData,config)\n        .then(res=>{\n            var data = res.data;\n            this.state.out.push(data)\n            this.setState({out:this.state.out})\n        });\n    }\n\n    next(e){\n        if(this.state.pictures.length==0)\n        {\n            e.currentTarget.innerText = \"Please Upload Images First\";\n        }\n        else {\n            this.setState({uploading:false}); \n            this.state.pictures.forEach((image=>{\n                this.processImage(image);\n            }));\n        }\n    }\n    back(){\n        this.setState({uploading:true,pictures:[],files:[],out:[]});\n    }\n    search(e){\n        if(e.currentTarget.value!=''){\n            this.setState({searching:true})\n        }\n        else{\n            this.setState({searching:false})\n        }\n        let found = false;\n        this.state.out.forEach((data,i)=>{\n            if(data.plate.join(' ')==e.currentTarget.value)\n            {\n                this.setState({search:i});\n                found = true;\n            }\n        })\n        if (!found){\n            this.setState({search:null});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            {this.state.uploading?\n            <div className=\"d-flex p-5 justify-content-center flex-wrap\">\n            <div className=\"p-4 col-12 d-flex justify-content-center\">\n            <ImageUpload className=\"col-6\" withIcon={true}\n                    buttonText='Choose images'\n                    onChange={this.onDrop}\n                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                    maxFileSize={5242880}/>\n                    {this.state.pictures.length==0?'':<div className=\"col-5 d-flex flex-wrap\">\n                    {this.state.files.map(\n                        (file,i)=>{\n                            return (<div key={i} className=\"col-4 p-3\">\n                            <img alttext=\"\" width=\"100%\" src={file}></img>\n                            </div>)\n                            })\n                            }\n                    </div>}\n            </div>\n            <div className=\"p-3\">\n                <button id=\"next_button\" onClick={this.next} className=\"btn btn-primary\">Continue</button>\n            </div>\n            </div>:<div className=\"d-flex flex-wrap col-12\">\n            <div className=\"col-12 d-flex p-3 flex-wrap\">\n            <div className=\"col-12 p-0 py-3\">Enter numbers then letters from left to right with a space between each</div>\n            <input onChange={this.search} type=\"search\" className=\"rounded border-dark col-4 mr-5\" placeholder=\"Search for car\"/></div>\n            {\n                this.state.pictures.map((_,i)=>{\n                    if(!this.state.searching||this.state.search==i)\n                    return(\n                    <Out key={i} data={this.state.out[i]}/>\n                    )})\n            }\n            <div className=\"py-3 col-12\"><button className=\"btn btn-primary\" onClick={this.back}>New Image</button></div>\n            </div>\n            }\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Head from './head';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Head />, document.getElementById('head'));\nif(document.getElementById('root'))\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}